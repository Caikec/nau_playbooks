---

# Open edX instance with 3 layers:
# - Load balancer servers
# - Persistence servers (mongo, cache and mysql groups)
# - Application servers (application group & complementary group)

# To mark a server for maintenance, like load balancer or mysql server, append to the shell command arguments:
#   ansible-playbook -i nau-data/envs/staging/hosts.ini deploy.yml --tags keepalived --limit slave_persistence_servers -e keepalived_priority=1
# To mark a server back to normal state, run the same command without the --limit.
#

- name: Bootstrap instances of 16.04
  hosts: all,!idpproxy_servers,!idpauth_servers,!richie_servers
  gather_facts: no
  become: true
  roles:
    - python_minimal

- name: Copy SSH Authorized keys
  hosts: all
  become: True
  gather_facts: True
  roles:
    - role: ssh_authorized_keys
  tags: 
    - ssh

- name: Configure hosts file
  hosts: all,!srv_local,!support_server,!command_and_control
  become: True
  gather_facts: True
  # vars defined on 02_hosts.yml
  roles: 
    - bertvv.hosts
  tags: hosts

- name: Configure load balancer docker
  # Deploy before on backup balancer, so if there is an error during the ansible deployment the primary continue to serve
  hosts: balancer_servers
  serial: "{{ serial_number | default(1) }}"
  become: True
  gather_facts: True
  roles:
    - role: keepalived
      vars: 
        keepalived_priority_value: 1 # Lower priority so the VIPs can swap to other machine.
      when: vrrp_instances is defined
    - role: geerlingguy.docker
    - role: ansible-firewall
    - role: docker_daemon
    - role: ansible-docker-deploy
    - role: haproxy-netsnmp-perl
    - role: snmpd
    - role: keepalived
      vars:
        keepalived_priority_value: "{{ keepalived_priority }}"
      when: vrrp_instances is defined
  tags: load-balancer

- name: Configure statics servers docker
  hosts: statics_servers
  serial: "{{ serial_number | default(1) }}"
  become: True
  gather_facts: True
  roles:
    - role: rolling_deploy
      vars:
        rolling_deploy_starting: true
      when: ( groups['statics_servers'] | length ) > 1
    - role: geerlingguy.docker
    - role: docker_daemon
    - role: ansible-docker-deploy
    - role: web_server_monitoring
    - role: snmpd
    - role: nau_check_urls
    - role: rolling_deploy
      vars:
        rolling_deploy_starting: false
      when: ( groups['statics_servers'] | length ) > 1

- name: Configure mysql server instance
  hosts: mysql_servers
  become: True
  gather_facts: True
  roles:
    - role: remove_edx_apt_ppa_repo
    - role: swapfile
    - role: data_dirs
    - role: edxlocal
    - role: oraclejdk
    - role: persistence_db
      vars:
        install_memcache: false
    - role: mysql_replication
    - role: keepalived
      when: vrrp_instances is defined

- name: Configure mongo server instance
  hosts: mongo_servers
  become: True
  gather_facts: True
  roles:
    - role: swapfile
    - role: data_dirs
    - role: mongo_3_2
    - role: oraclejdk
    - role: elasticsearch
    - role: es_kopf

- name: Configure cache server instance
  hosts: cache_servers
  become: True
  gather_facts: True
  roles:
    - role: memcache
    - role: rabbitmq
    - role: oraclejdk
    - role: persistence_db
      vars:
        install_mysql: false

- name: Configure the application server group
  hosts: app_servers
  serial: "{{ serial_number | default(1) }}"
  become: True
  gather_facts: True
  roles:
    - role: rolling_deploy
      vars:
        rolling_deploy_starting: true
      when: ( groups['app_servers'] | length ) > 1
    - role: remove_edx_apt_ppa_repo
    - role: swapfile
    - role: server_files # copy additional ssl certificates
    - role: nginx
      nginx_sites:
      - cms
      - lms
      - forum
      - nau_nginx_status
      nginx_default_sites:
      - lms
    - role: nginx_default_static_site
      when: use_nginx_default_site
    - role: edxapp
      celery_worker: True
    - edxapp
    - forum
    - role: postfix_queue
      when: POSTFIX_QUEUE_EXTERNAL_SMTP_HOST is defined and POSTFIX_QUEUE_EXTERNAL_SMTP_HOST != ""
    - role: logrotate_overrides
      when: COMMON_COMPLEMENTARY_APPLICATION_ROLES is defined and 'aws' in COMMON_COMPLEMENTARY_APPLICATION_ROLES
    - role: web_server_monitoring
    - role: snmpd
    - role: nau_check_urls
    - role: rolling_deploy
      vars:
        rolling_deploy_starting: false
      when: ( groups['app_servers'] | length ) > 1

- name: Configure the complementary server group
  hosts: complementary_servers
  serial: "{{ serial_number | default(1) }}"
  become: True
  gather_facts: True
  roles:
    - role: rolling_deploy
      vars:
        rolling_deploy_starting: true
      when: ( groups['complementary_servers'] | length ) > 1
    - role: remove_edx_apt_ppa_repo
    - role: swapfile
    - role: nginx
      nginx_sites:
      - insights
      - edx_notes_api
      - nau_nginx_status
    - role: nginx_default_static_site
      when: use_nginx_default_site
    - role: discovery
      when: COMMON_COMPLEMENTARY_APPLICATION_ROLES is defined and 'discovery' in COMMON_COMPLEMENTARY_APPLICATION_ROLES
    - role: ecommerce
      when: COMMON_COMPLEMENTARY_APPLICATION_ROLES is defined and 'ecommerce' in COMMON_COMPLEMENTARY_APPLICATION_ROLES
    - role: ecomworker
      when: COMMON_COMPLEMENTARY_APPLICATION_ROLES is defined and 'ecommerce' in COMMON_COMPLEMENTARY_APPLICATION_ROLES
    - role: edx_notes_api
      when: COMMON_COMPLEMENTARY_APPLICATION_ROLES is defined and 'edx_notes_api' in COMMON_COMPLEMENTARY_APPLICATION_ROLES
    - role: analytics_api
      when: COMMON_COMPLEMENTARY_APPLICATION_ROLES is defined and 'analytics_api' in COMMON_COMPLEMENTARY_APPLICATION_ROLES
    - role: insights
      when: COMMON_COMPLEMENTARY_APPLICATION_ROLES is defined and 'insights' in COMMON_COMPLEMENTARY_APPLICATION_ROLES
    - role: mfe_deployer
      when: COMMON_COMPLEMENTARY_APPLICATION_ROLES is defined and 'mfe' in COMMON_COMPLEMENTARY_APPLICATION_ROLES
    - role: web_server_monitoring
    - role: snmpd
    - role: nau_check_urls
    - role: rolling_deploy
      vars:
        rolling_deploy_starting: false
      when: ( groups['complementary_servers'] | length ) > 1

- name: Configure pipeline servers
  hosts: pipeline_servers
  become: True
  gather_facts: True
  vars:
    ANALYTICS_API_SERVICE_CONFIG: "When defined, we create the analytics-api users at the db"
  roles:
    - role: remove_edx_apt_ppa_repo
    - role: swapfile
    - role: edxlocal
    - analytics_pipeline
    - analytics_pipeline_configuration

- name: Configure the richie marketing servers
  hosts: richie_servers
  serial: "{{ serial_number | default(1) }}"
  become: True
  #become_flags: "-E"
  gather_facts: True
  vars:
    rolling_deploy_docker: true
  roles: 
    - role: rolling_deploy
      vars:
        rolling_deploy_starting: true
      when: ( groups['richie_servers'] | length ) > 1
    - role: geerlingguy.docker
    - role: docker_daemon
    - role: basic-authentication
    - role: ansible-docker-deploy
    - role: web_server_monitoring
    - role: snmpd
    - role: nau_check_urls
    - role: rolling_deploy
      vars:
        rolling_deploy_starting: false
      when: ( groups['richie_servers'] | length ) > 1

# specific variables are configured on nau-data/envs/<env>/group_vars/idpproxy_servers.yml
- name: Configure Shibboleth IdP
  hosts: 
    - idpproxy_servers
    - idpauth_servers
  become: True
  gather_facts: True
  tags: 
    - idp
  roles:
    - role: server_files
      vars: 
        server_files: "{{ server_files_before }}"
    - shibboleth-3-4-4-centos7-lite/roles/check-system
    - shibboleth-3-4-4-centos7-lite/roles/system
    - shibboleth-3-4-4-centos7-lite/roles/httpd
    - shibboleth-3-4-4-centos7-lite/roles/tomcat
    - shibboleth-3-4-4-centos7-lite/roles/postgresql
    - shibboleth-3-4-4-centos7-lite/roles/shibboleth
    - shibboleth-3-4-4-centos7-lite/roles/shibboleth_files
    - role: shibboleth-3-4-4-centos7-lite/roles/cc-cmd
      when: install_cc_cmd is not defined or install_cc_cmd
    - shibboleth-3-4-4-centos7-lite/roles/performance
    - role: server_files
      vars: 
        server_files: "{{ server_files_after }}"

- name: Configure FAM
  hosts: fam_servers
  become: True
  become_flags: "-E" # Needed for jenkins deployment because ubuntu user needs to sudo and that make it lose its ssh agent forwarding env configuration.
  gather_facts: True
  roles:
    - geerlingguy.docker
    - docker_daemon
    - ansible-docker-deploy
