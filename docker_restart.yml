# Playbook that restarts the docker daemon and its running containers on a rolling restart manner.
#
# Example:
#   ansible-playbook -i nau-data/envs/<env>/hosts.ini docker_restart.yml --limit <group>
---
- hosts: all
  serial: "{{ serial_number | default(1) }}"
  become: True
  gather_facts: True
  vars:
    rolling_deploy_enabled: true
  tasks:
    - name: Lower keepalived priority to force VIP swap
      import_role:
        name: keepalived
      vars:
        keepalived_priority_override: 1
      when: keepalived_vrrp_instances is defined and ( keepalived_vrrp_instances|length > 0 )
    
    - name: force all notified handlers to run at this point
      meta: flush_handlers
    
    - name: Start rolling deploy - block load balancer connections
      import_role:
        name: rolling_deploy
      when: rolling_deploy_enabled | bool
      vars:
        rolling_deploy_docker: true
        rolling_deploy_starting: true

    # Real stuff to do restart docker and its containers
    - name: Restart service docker
      service:
        name: docker
        state: restarted

    - name: Run Makefile healthcheck
      shell: make --jobs 20 --no-print-directory --directory {{ item }} healthcheck
      retries: "{{ healthcheck_retries | default(50) }}"
      delay: "{{ healthcheck_delay | default(30) }}"
      register: result
      until: result.rc == 0
      check_mode: no # execute even when ansible is run with --check
      when: makefile_healthcheck is defined
      changed_when: False
      with_items: "{{ makefile_healthcheck }}"

    - import_role:
        name: nau_check_urls

    - name: End rolling deploy - open load balancer connections
      import_role:
        name: rolling_deploy
      vars:
        rolling_deploy_docker: true
        rolling_deploy_starting: false
      when: rolling_deploy_enabled | bool

    - name: Restore keepalived priority
      import_role:
        name: keepalived
      vars:
        keepalived_priority_override: ""
      when: keepalived_vrrp_instances is defined and ( keepalived_vrrp_instances|length > 0 )
