version: "3.8"

services:
{% for mysql_container_name, mysql_container in openedx_mysql_containers.items() %}

  {{ mysql_container_name }}:
    image: {{ openedx_mysql_docker_image | default("docker.io/mysql:5.7.37-debian") }}
    environment:
      MYSQL_ROOT_PASSWORD: "{{ EDXAPP_MYSQL_PASSWORD_ADMIN }}"
      MYSQL_DATABASE: "{{ EDXAPP_MYSQL_DB_NAME }}"
      # MYSQL_USER: "{{ COMMON_MYSQL_ADMIN_USER }}"
      # MYSQL_PASSWORD: "{{ EDXAPP_MYSQL_PASSWORD_ADMIN }}"
      # MYSQL_ROOT_HOST: "{{ openedx_mysql_root_host }}"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping --silent -p{{ EDXAPP_MYSQL_PASSWORD_ADMIN }} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 10s
    volumes:
      - {{ mysql_container.data }}:/var/lib/mysql
    ports:
      # In future after the migration of everything to swarm, limit this connection to localhost
      # example with: "127.0.0.1:3306:3306"
      - target: 3306
        published: {{ mysql_container.ingress_port }}
        protocol: tcp
        mode: ingress
    configs:
      - source: {{ mysql_container.openedx_mysql_config_name }}_{{ hostvars[inventory_hostname]['docker_deploy_configs_checksum'][ openedx_docker_deploy_stack_name + '_' + mysql_container.openedx_mysql_config_name ][:10] }}
        target: /etc/mysql/conf.d/mysql.cnf
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 4G
      placement:
        constraints:
          - node.labels.fqdn == {{ mysql_container.host_fqdn }}
{% endfor %}

configs:
{% for template in ( docker_deploy_templates | selectattr('config_name', 'defined') | list ) %}
  {{ template.config_name }}_{{ hostvars[inventory_hostname]['docker_deploy_configs_checksum'][ openedx_docker_deploy_stack_name + '_' + template.config_name ][:10] }}:
    file: {{ template.dest }}
{% endfor %}
