# Playbook that checks the health of the services.
#
# 1. Check databases replication used by the open edx platform:
# - MySQL DB
# - MongoDB
# - Elasticsearch
#
# 2. Run check urls for all the web servers
---
- name: Check MySQL Database instances
  hosts: mysql_servers
  become: True
  gather_facts: True
  tasks:
    - name: Check lag from primary
      shell: mysql -u root -e "show slave status\G" | grep "Seconds_Behind_Master" | awk '{print $2}'
      register: mysql_output
      changed_when: false
      
    - name: Fail if MySQL DB instance is too much behind
      fail:
        msg: Fail MySQL DB instance is too much behind
      # it is ok if the node is behind from 0 to 9 seconds lag
      when: mysql_output.stdout is not match("[0-9]")

- name: Check Mongo Database instances
  # we only need to run th commands on a single server, so we run on the first defined on the ansible
  hosts: mongo_servers[0]
  become: True
  gather_facts: True
  tasks:
    - name: Get MongoDB secondary nodes replication information
      shell: |
        mongo admin -u admin -p{{ MONGO_ADMIN_PASSWORD }} --host rs0/localhost --eval 'db.printSlaveReplicationInfo()' | grep "behind the primary" | awk '{print $1}' | egrep "^[0-9]$" | wc -l
      register: mongo_db_secoundary_nodes_result
      changed_when: false
      
    - name: Fail if MongoDB secondary nodes replication isn't ok
      fail:
        msg: Fail the number of healthy secundary nodes
      when: mongo_db_secoundary_nodes_result.stdout != ( (( groups['mongo_servers'] | length) -1) | string )

    - name: Get Elasticsearch cluster health
      shell: |
        curl -s -X GET 'localhost:9200/_cluster/health?pretty' | grep 'number_of_nodes' | egrep -o '[0-9]+'
      args:
        warn: false
      register: es_nodes_result
      changed_when: false
      
    - name: Fail if Elasticsearch secondary nodes replication isn't ok
      fail:
        msg: Fail the number of healthy secundary nodes
      when: es_nodes_result.stdout != (( groups['mongo_servers'] | length) | string )
    
    - name: Check Elasticsearch cluster, indexes and shards health
      shell: curl -s -X GET 'localhost:9200/_cluster/health?level=shards&pretty' | egrep -o "status.*\," | sort | uniq | egrep -o "\"[^\ ]+\""
      args:
        warn: false
      register: es_shards_result
      changed_when: false
      
    - name: Fail if Elasticsearch cluster, indexes and shards health isn't ok
      fail:
        msg: Fail the Elasticsearch cluster, indexes and shards health
      when: es_shards_result.stdout != "\"green\""

- name: Check URLs
  hosts: statics_servers,app_servers,complementary_servers,wordpress_servers
  become: True
  gather_facts: True
  roles:
    - nau_check_urls
