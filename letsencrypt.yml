#
#
# Example:
#    ansible-playbook -i nau-data/envs/<env>/hosts.ini letsencrypt.yml -e '{"letsencrypt_domains_to_issue_certs": ["custom-domain.example.com"]}'
#
# Add the new domain to the `letsencrypt_domains_to_issue_certs` environment variable.
# Configure the new domain to copy certificate and key on the `openedx_docker_servers.yml` file 
# on the environment.
---
- name: (Re)Issue ssl https certificates using Let's Encrypt
  hosts: balancer_servers[0]
  become: True
  gather_facts: True
  tasks:
    - name: (Re)Issue ssl https certificates using Let's Encrypt on primary HAProxy load balancer
      import_role:
        name: letsencrypt_issue
      vars:
        letsencrypt_certbot_email: alertas@nau.edu.pt
        letsencrypt_certbot_root_folder: /nau/ops/certbot/conf

        # letsencrypt_domains_to_issue_certs:
        #   - cursos-ssi.stage.nau.fccn.pt

        s3_host: "{{ AWS_S3_DBS_BACKUP_HOST }}"
        s3_host_bucket: "{{ AWS_S3_DBS_BACKUP_BUCKET_NAME }}"
        s3_path_prefix: "/letsencrypt_certificates"
        s3_access_key_id: "{{ EDXAPP_BACKUPS_AWS_ACCESS_KEY_ID }}"
        s3_secret_access_key: "{{ EDXAPP_BACKUPS_AWS_SECRET_ACCESS_KEY }}"


- name: Download Let's Encrypt certificates to HAProxy load balancers
  hosts: balancer_servers
  become: True
  gather_facts: True
  tasks:
    - name: Download and update certificates on HAProxy
      import_role:
        name: haproxy_update_certs
      vars:
        s3_host: "{{ AWS_S3_DBS_BACKUP_HOST }}"
        s3_host_bucket: "{{ AWS_S3_DBS_BACKUP_BUCKET_NAME }}"
        s3_path_prefix: "/letsencrypt_certificates"
        s3_access_key_id: "{{ EDXAPP_BACKUPS_AWS_ACCESS_KEY_ID }}"
        s3_secret_access_key: "{{ EDXAPP_BACKUPS_AWS_SECRET_ACCESS_KEY }}"
        haproxy_certs_folder: "{{ docker_deploy_base_folder }}/certs"
      tags: haproxy_update_certs

- name: Download Let's Encrypt certificates to nginx on Open edX app servers
  hosts: openedx_docker_servers
  become: True
  gather_facts: True
  vars:
    certificates_folder: "{{ openedx_docker_deploy_base_folder }}/nginx/ssl"
    s3_host: "{{ AWS_S3_DBS_BACKUP_HOST }}"
    s3_host_bucket: "{{ AWS_S3_DBS_BACKUP_BUCKET_NAME }}"
    s3_path_prefix: "/letsencrypt_certificates"
    s3_access_key_id: "{{ EDXAPP_BACKUPS_AWS_ACCESS_KEY_ID }}"
    s3_secret_access_key: "{{ EDXAPP_BACKUPS_AWS_SECRET_ACCESS_KEY }}"
  tasks:

    - name: Install required packages
      package:
        name: s3cmd
        state: present
      tags:
        - openedx_update_certs
        - install

    - name: Download Let's Encrypt certificates
      vars:
        s3cmd_prefix: s3cmd get --force --host {{ s3_host }} --host-bucket {{ s3_host_bucket }}
      shell: "{{ s3cmd_prefix }} s3://{{ s3_host_bucket }}{{ s3_path_prefix }}/{{ domain }}.pem     {{ certificates_folder }}/{{ domain }}.pem && \
              {{ s3cmd_prefix }} s3://{{ s3_host_bucket }}{{ s3_path_prefix }}/{{ domain }}.pem.key {{ certificates_folder }}/{{ domain }}.pem.key"
      environment:
        AWS_ACCESS_KEY_ID: "{{ s3_access_key_id }}"
        AWS_SECRET_ACCESS_KEY: "{{ s3_secret_access_key }}"
      loop: "{{ letsencrypt_domains_to_issue_certs }}"
      loop_control:
        loop_var: domain
      tags: openedx_update_certs

    - name: nginx check config
      shell: make --no-print-directory --directory {{ openedx_docker_deploy_base_folder }} check-config-nginx
      tags:
        - openedx_update_certs
        - nginx
        - ngxin_check_config

    - name: nginx reload
      shell: make --no-print-directory --directory {{ openedx_docker_deploy_base_folder }} reload-nginx
      tags:
        - openedx_update_certs
        - nginx
        - ngxin_reload

    - name: Run Makefile healthcheck
      shell: make --jobs 20 --no-print-directory --directory {{ item }} healthcheck
      retries: "{{ healthcheck_retries | default(50) }}"
      delay: "{{ healthcheck_delay | default(30) }}"
      register: result
      until: result.rc == 0
      when: makefile_healthcheck is defined
      changed_when: False
      with_items: "{{ makefile_healthcheck }}"
      tags:
        - openedx_update_certs
        - healthcheck
