# Run discovery refresh django scripts, like: 
# - Refresh course metadata
# - Remove unused indexes
# - Update index
# 
# Then caches the LMS programs data.
#
# By default it is used the first complementary server and app server defined on the ansible inventory.
# If it's required to use other server, then customize it by using the ansible extra vars:
#
# Ansible playbook extra variables:
# - target_complementary_server
# - target_app_server
#
# Example: 
#   ansible-playbook -i nau-data/envs/development/hosts.ini openedx_discovery_refresh.yml -e target_complementary_server=other-compl-dev-server.nau.edu.pt
---
- name: Run discovery django scripts on first complementary server
  hosts: "complementary_servers:&{{ target_complementary_server | default('complementary_servers') }}[0]"
  tasks:
    - name: Refresh course metadata, remove unused indexes and update index
      become: true # use sudo to run command using other user
      become_user: discovery # run command has discovery user
      args:
        executable: /bin/bash # use bash instead of sh so we could source venvs
      # Example to run something manually
      #   sudo -u discovery /bin/bash -c "cd /edx/app/discovery && source venvs/discovery/bin/activate && source discovery_env && cd discovery && ./manage.py help"
      shell: |
        cd &&
        source venvs/discovery/bin/activate &&
        source discovery_env &&
        cd discovery &&
        ./manage.py refresh_course_metadata &&
        ./manage.py remove_unused_indexes &&
        ./manage.py update_index --batch-size 20 --disable-change-limit
      register: discovery_output

    - name: Print stdout of refresh course metadata output
      debug:
        msg: "{{ discovery_output.stdout_lines }}"

    - name: Print stderr of refresh course metadata output
      debug:
        msg: "{{ discovery_output.stderr_lines }}"

- name: Run LMS cache on first app server
  hosts: "app_servers:&{{ target_app_server | default('app_servers') }}[0]"
  tasks:
    - name: LMS cache programs
      become: true # use sudo to run command using other user
      become_user: edxapp # run command has discovery user
      args:
        executable: /bin/bash # use bash instead of sh so we could source venvs
      shell: |
        cd
        source venvs/edxapp/bin/activate
        source edxapp_env
        cd edx-platform/
        ./manage.py lms cache_programs
      register: lms_cache_output

    - name: Print stdout of lms cache programs output
      debug:
        msg: "{{ lms_cache_output.stdout_lines }}"

    - name: Print stderr of lms cache programs output
      debug:
        msg: "{{ lms_cache_output.stderr_lines }}"
