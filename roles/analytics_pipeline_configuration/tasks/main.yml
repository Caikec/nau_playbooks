---

- name: Install packages needed for analytics pipeline
  apt:
    name: "{{ item }}"
    install_recommends: yes
    state: present
    update_cache: yes
  with_items: "{{ analytics_pipeline_configuration_debian_pkgs }}"

- name: pip install virtualenv
  pip:
    name: "{{ item }}"
    state: present
  with_items: "{{ analytics_pipeline_configuration_common_pip_pkgs }}"

- name: Create necessary directories
  file:
    path: "{{ item.path }}"
    state: "{{ item.state | default('directory') }}"
    owner: "{{ item.owner | default('ubuntu') }}"
    group: "{{ item.group | default('ubuntu') }}"
    mode: "0755"
  with_items: "{{ analytics_pipeline_configuration_common_directories }}"

- name: Copy analytics pipeline configuration files to the right path
  template:
    src: "{{ item }}.j2"
    dest: "{{ analytics_pipeline_configuration_files_dir }}/{{ item }}"
    owner: "{{ analytics_pipeline_configuration_user }}"
    group: "{{ analytics_pipeline_configuration_user }}"
    mode: 0644
  with_items:
    - "reports_output_db.json"
    - "edxapp_input_db.json"
    - "overrides.cfg"

# The two tasks below are required to run analytics-pipeline GeoIP-history task

- name: Download GeoIP data for Hadoop to local filesystem
  get_url:
    url: "{{ analytics_pipeline_configuration_geo_data_link }}"
    dest: "{{ analytics_pipeline_configuration_files_dir }}/geo.dat"
    owner: "hadoop"
    group: "hadoop"
    force: yes
  tags: geoip-analytics-configuration

- name: Copy GeoIP data from local filesystem to HDFS
  shell: ". {{ analytics_pipeline_configuration_hadoop_conf_dir }}/hadoop-env.sh && hdfs dfs -copyFromLocal -f {{ analytics_pipeline_configuration_files_dir }}/geo.dat hdfs://localhost:9000/edx-analytics-pipeline/packages/"
  become_user: "hadoop"
  tags: geoip-analytics-configuration

- name: fetching edx-analytics-pipeline repo
  git:
    dest: "{{ analytics_pipeline_configuration_repo_path }}"
    repo: "{{ analytics_pipeline_configuration_repo }}"
    version: "{{ analytics_pipeline_configuration_repo_version }}"
    accept_hostkey: yes
  become_user: "{{ analytics_pipeline_configuration_user }}"

- name: Create the analytics pipeline configuration virtualenv
  command: "virtualenv {{ analytics_pipeline_configuration_venv_dir }}"
  args:
    creates: "{{ analytics_pipeline_configuration_venv_dir }}/bin/pip"
  become_user: "{{ analytics_pipeline_configuration_user }}"

- name: pre bootstrap step
  shell: "source {{ analytics_pipeline_configuration_venv_dir }}/bin/activate && pip install -r requirements/pip.txt"
  args:
    chdir: "{{ analytics_pipeline_configuration_repo_path }}"
    executable: /bin/bash
  become_user: "{{ analytics_pipeline_configuration_user }}"


- name: Bootstrap of edx-analytics-pipeline configuration
  shell: "source {{ analytics_pipeline_configuration_venv_dir }}/bin/activate && make bootstrap"
  args:
    chdir: "{{ analytics_pipeline_configuration_repo_path }}"
    executable: /bin/bash
  become_user: "{{ analytics_pipeline_configuration_user }}"
