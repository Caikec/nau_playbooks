# {{ ansible_managed }}

[STREAM_TASK]
    Name   log_last5m_total_st
# group by docker_project and docker_service on 5 minutes window.
    Exec   CREATE STREAM log_last5m_total_stream WITH (tag='metrics.log.last5m.count.total') AS SELECT docker_project AS docker_project, docker_service AS docker_service, COUNT(*) AS log_lines_count FROM TAG:'docker.container.log.*' WINDOW TUMBLING (300 SECOND) GROUP BY docker_project, docker_service;

# stream that selects only the tracking_json from the openedx lms messages that are a tracking log message.
[STREAM_TASK]
    Name   openedx_lms_tracking_json
    Exec   CREATE STREAM openedx_lms_tracking_logs WITH (tag='openedx.trackinglogs') AS SELECT tracking_json FROM TAG:'docker.container.log.openedx_lms' WHERE @record.contains(tracking_json);

# stream that selects only the tracking_json from the openedx cms messages that are a tracking log message.
[STREAM_TASK]
    Name   openedx_cms_tracking_json
    Exec   CREATE STREAM openedx_cms_tracking_logs WITH (tag='openedx.trackinglogs') AS SELECT tracking_json FROM TAG:'docker.container.log.openedx_cms' WHERE @record.contains(tracking_json);

# stream that counts the total of nginx requests/hits on a 5 minutes window grouped by docker project and service.
[STREAM_TASK]
    Name   requests_last5m_count_total_st
    Exec   CREATE STREAM requests_last5m_count_total_stream WITH (tag='metrics.requests.last5m.count.total') AS SELECT docker_project AS docker_project, docker_service AS docker_service, COUNT(code) AS requests_last5m_count_total FROM TAG:'docker.container.log.*' WINDOW TUMBLING (300 SECOND) WHERE @record.contains(code) GROUP BY docker_project, docker_service;
# it isn't possible to execute a basic mathematic function on the stream,
# so it isn't possible to calculate the number of requests per second of the nginx requests/hits.

# Stream that counts requests grouped by docker project, service and http status code.
[STREAM_TASK]
    Name   requests_last5m_code_st
    Exec   CREATE STREAM requests_last5m_code_stream WITH (tag='metrics.requests.last5m.code') AS SELECT docker_project AS docker_project, docker_service AS docker_service, code AS code, COUNT(*) AS requests_last5m_code FROM TAG:'docker.container.log.*' WINDOW TUMBLING (300 SECOND) WHERE @record.contains(code) GROUP BY docker_project, docker_service, code;

# Streams that counts the requests http status code of 1xx, 2xx, 3xx, 4xx and 5xx grouped by docker project and service.
{% for n in (1,2,3,4,5) %}
[STREAM_TASK]
    Name   requests_last5m_code_{{n}}xx_st
    Exec   CREATE STREAM requests_last5m_code_{{n}}xx_stream WITH (tag='metrics.requests.last5m.code.{{n}}xx') AS SELECT docker_project AS docker_project, docker_service AS docker_service, COUNT(*) AS requests_last5m_code_{{n}}xx FROM TAG:'docker.container.log.*' WINDOW TUMBLING (300 SECOND) WHERE @record.contains(code) AND code >= {{n}}00 AND code <= {{n}}99 GROUP BY docker_project, docker_service;
{% endfor %}

# stream that selects the maximum request time grouped by docker project and service.
[STREAM_TASK]
    Name   requests_last5m_time_max_st
    Exec   CREATE STREAM requests_last5m_time_max_stream WITH (tag='metrics.requests.last5m.time.max') AS SELECT docker_project AS docker_project, docker_service AS docker_service, MAX(request_time) AS requests_last5m_time_max FROM TAG:'docker.container.log.*' WINDOW TUMBLING (300 SECOND) WHERE @record.contains(request_time) GROUP BY docker_project, docker_service;

# stream that selects the average request time grouped by docker project and service.
[STREAM_TASK]
    Name   requests_last5m_time_avg_st
    Exec   CREATE STREAM requests_last5m_time_avg_stream WITH (tag='metrics.requests.last5m.time.avg') AS SELECT docker_project AS docker_project, docker_service AS docker_service, AVG(request_time) AS requests_last5m_time_avg FROM TAG:'docker.container.log.*' WINDOW TUMBLING (300 SECOND) WHERE @record.contains(request_time) GROUP BY docker_project, docker_service;
