---
- name: Create folders volumes for openedx stack
  file:
    dest: "{{ item.dest | dirname }}"
    owner: "{{ item.dir_owner|default(omit) }}"
    group: "{{ item.dir_group|default(omit) }}"
    mode: "{{ item.dir_mode | default(omit) }}"
    recurse: true
    state: directory
  when: (openedx_deploy_create_volumes | default(false)) and (item.when | default(true) | bool)
  loop_control:
    label: "{{ item.dest }}"
  loop: "{{ openedx_docker_deploy_folders_additional }}"
  tags:
    - docker_deploy

# - name: Generate basic-authentication for each site
#   include_role:
#     name: basic-authentication
#   vars:
#     basic_authentication_users: "{{ item.nginx_basic_authentication_users }}"
#   when: docker_swarm_manager_to_deploy is defined and docker_swarm_manager_to_deploy == inventory_hostname and openedx_deploy_run | default(false) and item.nginx_basic_authentication_users is defined
#   with_dict: "{{ openedx_sites }}"
#   tags:
#     - docker_deploy

- name: Configure sysctl.conf
  lineinfile: dest=/etc/sysctl.conf line="{{ item.key }} = {{ item.value }}" regexp="^{{ item.key }}[\s]?=" state=present
  with_dict: "{{ openedx_sysctl_conf }}"
  when: openedx_deploy_run | default(false)
  notify: reload sysctl
  tags:
    - docker_deploy

- name: Install MySQL client for health check
  package:
    name: mysql-client
  when: openedx_deploy_run | default(false)
  tags:
    - docker_deploy

- name: Deploy
  include_role:
    name: ansible-docker-deploy
  when: docker_swarm_manager_to_deploy is defined and docker_swarm_manager_to_deploy == inventory_hostname and openedx_deploy_run | default(false)
  tags:
    - docker_deploy

- name: Run healthcheck
  shell: make healthcheck
  args:
    chdir: "{{ openedx_docker_deploy_base_folder }}"
  delay: "{{ docker_deploy_stack_verify_delay | default(15) }}"
  register: result
  until: result.rc == 0
  retries: "{{ openedx_deploy_healthcheck_retries | default(30) }}" # 10 minutes of waiting
  # run it only when deploying or when on healthcheck mode.
  when: docker_swarm_manager_to_deploy is defined and docker_swarm_manager_to_deploy == inventory_hostname and not ansible_check_mode and (openedx_deploy_run | default(false)) or (healthcheck | default(false))
  changed_when: False
  tags: 
    - healthcheck
    - docker_deploy

- name: Check URLs
  include_role:
    name: nau_check_urls
  when: docker_swarm_manager_to_deploy is defined and docker_swarm_manager_to_deploy == inventory_hostname and (openedx_deploy_run | default(false)) or (healthcheck | default(false))
  tags:
    - docker_deploy
    - nau_check_urls

- name: Initialize openedx MySQL databases replication
  include_role:
    name: docker_mysql_replication
  when: openedx_mysql_initialization | default(False)
  vars:
    # The replication mysql files are templated using the ansible-docker-deploy role instead of docker_mysql_replication role
    docker_mysql_replication_template: false
    # dict with docker containers configuration
    docker_mysql_replication_containers: "{{ openedx_mysql_containers }}"
    docker_mysql_replication_additional_databases: "{{ openedx_docker_mysql_replication_additional_databases }}"
    docker_mysql_replication_additional_users: "{{ openedx_docker_mysql_replication_additional_users }}"
    docker_mysql_replication_containers_prefix: openedx
  tags: 
    - docker_deploy
    - docker_mysql_replication
    - docker_mysql_replication_additional_users
