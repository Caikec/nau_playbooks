# {{ ansible_managed }}

events {}

http {

    default_type  application/octet-stream;

    include       /etc/nginx/mime.types;

    # Configure logging to include scheme and server name
    log_format p_combined '$http_x_forwarded_for - $remote_addr - $remote_user [$time_local] $scheme://$host '
        '"$request" $status $body_bytes_sent $request_time '
        '"$http_referer" "$http_user_agent"';

    # Enable gzip compression.
    # Default: off
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    # Default: 1
    gzip_comp_level    5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    # Default: 20
    gzip_min_length    256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    # Default: off
    gzip_proxied       any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    # Default: off
    gzip_vary          on;

    # Compress all output labeled with one of the following MIME-types.
    # text/html is always compressed by gzip module.
    # Default: text/html
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-javascript
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        application/xml+rss
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/javascript
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy
        text/xml;

    # This should be turned on if you are going to have pre-compressed copies (.gz) of
    # static files available. If not it should be left off as it will cause extra I/O
    # for the check. It is best if you enable this in a location{} block for
    # a specific directory, or on an individual server{} level.
    # gzip_static on;

    # Use docker DNS resolver with a limited DNS valid time.
    # This creates something like a discover mechanism.
    # If the application service is redeployed the nginx service would discover this change automatically.
    resolver 127.0.0.11 valid=10s;

    # Enables the specified protocols, like TLSv1.1 TLSv1.2 TLSv1.3
    ssl_protocols {{ NGINX_SSL_PROTOCOLS }};

    # Specifies the enabled ciphers. The ciphers are specified in the format understood by the OpenSSL library
    ssl_ciphers {{ NGINX_SSL_CIPHERS }};
    
    # Specifies that server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols
    ssl_prefer_server_ciphers on;

    # SSL intermediate configuration from https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl_certificate /etc/ssl/certs/certificate.crt.pem;
    ssl_certificate_key /etc/ssl/certs/certificate.key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    client_max_body_size 100M;
    charset utf-8;

    ##
    # Virtual Host Configs
    ##
    include /etc/nginx/sites-enabled/*;
}
