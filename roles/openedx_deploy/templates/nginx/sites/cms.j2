# {{ ansible_managed }}
#
# Studio (CMS) nginx site configuration
#

{% if EDXAPP_CORS_ORIGIN_WHITELIST|length > 0 %}
  # The Origin request header indicates where a fetch originates from. It doesn't include any path information,
  # but only the server name (e.g. https://www.example.com).
  # See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin for details.
  #
  # Here we set the value that is included in the Access-Control-Allow-Origin response header. If the origin is one
  # of our known hosts--served via HTTP or HTTPS--we allow for CORS. Otherwise, we set the "null" value, disallowing CORS.
  map $http_origin $cors_origin {
  default "null";
  {% for host in EDXAPP_CORS_ORIGIN_WHITELIST %}
    "~*^https?:\/\/{{ host|replace('.', '\.') }}$" $http_origin;
  {% endfor %}
  }
{% endif %}

## Iterate each lms server
{% for cms_server in openedx_nginx_cms_servers %}

# Configuration for STUDIO
server {
  # CMS configuration file for nginx, templated by ansible

  # Proxy to a remote maintanence page
  {% if NGINX_EDXAPP_ENABLE_S3_MAINTENANCE %}

  # Do not include a 502 error in NGINX_ERROR_PAGES when
  # NGINX_EDXAPP_ENABLE_S3_MAINTENANCE is enabled.

  error_page 502 @maintenance;
  {% include "s3_maintenance.j2" %}

  {% endif %}

  # error pages
  {% for k, v in NGINX_EDXAPP_ERROR_PAGES.items() %}
error_page {{ k }} {{ v }};
  {% endfor %}

{% include "empty_json.j2" %}

  listen {{ EDXAPP_CMS_NGINX_PORT }} {{ ' http2' if openedx_nginx_http2 else '' }};

  {% if NGINX_ENABLE_SSL %}

  listen {{ EDXAPP_CMS_SSL_NGINX_PORT }} ssl{% if haproxy_tcp %} proxy_protocol{% endif %}{{ ' http2' if openedx_nginx_http2 else '' }};

{% include "real_ip.j2" %}

  ssl_certificate     {{ cms_server.ssl_certificate     | default(openedx_nginx_ssl_certificate_docker_target)     }};
  ssl_certificate_key {{ cms_server.ssl_certificate_key | default(openedx_nginx_ssl_certificate_key_docker_target) }};
  {% endif %}

  {% if NGINX_ENABLE_SSL or NGINX_REDIRECT_TO_HTTPS %}
  # request the browser to use SSL for all connections
  add_header Strict-Transport-Security "max-age={{ NGINX_HSTS_MAX_AGE | default(31536000) }}; includeSubDomains";
  {% endif %}
  add_header X-Backend-Server $hostname always;

  # prevent the browser from doing MIME-type sniffing
  add_header X-Content-Type-Options nosniff;

{% if cms_server.server_name %}
  server_name {{ cms_server.server_name | default( CMS_HOSTNAME ) }};
{% endif %}

  access_log /var/log/nginx/access.log p_combined;
  error_log  /var/log/nginx/error.log  error;

  # CS184 requires uploads of up to 4MB for submitting screenshots.
  # CMS requires larger value for course assest, values provided
  # via hiera.
  client_max_body_size 250M;

  # Disables server version feedback on pages and in headers
  server_tokens off;

  rewrite ^(.*)/favicon.ico$ /static/images/favicon.ico last;

  location @proxy_to_app {
{% include "cms_proxy.j2" %}
  }

  location @proxy_to_app_api {
    error_page 504 @empty_json;
    error_page 502 @empty_json;
    error_page 500 @empty_json;

{% include "cms_proxy.j2" %}
  }

  location / {
    {% if EDXAPP_CMS_ENABLE_BASIC_AUTH|default(false)|bool %}
      {% include "basic-auth.j2" %}
    {% endif %}
    try_files $uri @proxy_to_app;
  }

  # No basic auth security on the github_service_hook url, so that github can use it for cms
  location /github_service_hook {
    try_files $uri @proxy_to_app;
  }

  # No basic auth security on the heartbeat url, so it can be used by the monitoring solutions
  location /heartbeat {
    # If /edx/var/nginx/server-static/maintenance_heartbeat.txt exists serve an
    # empty 200 so the instance stays in the load balancer to serve the
    # maintenance page
    if (-f /edx/var/nginx/server-static/maintenance_heartbeat.txt) {
       return 200;
    }
    try_files $uri @proxy_to_app;
  }

  # The api is accessed using OAUTH2 which
  # uses the authorization header so we can't have
  # basic auth on it as well.
  location /api {
    try_files $uri @proxy_to_app_api;
  }

{% if NGINX_ADMIN_ACCESS_CIDRS and EDXAPP_ENABLE_DJANGO_ADMIN_RESTRICTION %}
  location /admin {
    {% for cidr in NGINX_ADMIN_ACCESS_CIDRS %}
      allow {{ cidr }};
    {% endfor %}
      deny all;
      try_files $uri @proxy_to_app;
  }
{% endif %}

  {% include "robots.j2" %}
  {% import 'static-files.j2' as static_files with context %}
  {{ static_files.generate_static_files(openedx_nginx_cms_staticfiles_folders) }}

}
{% endfor %}